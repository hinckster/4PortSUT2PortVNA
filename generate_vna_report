import skrf as rf
import numpy as np
import matplotlib.pyplot as plt

# 6 two-port measurements
paths = {
    'p12': r'C:\Users\Hinckster\Downloads\ProjectVNA\P1P2.s2p',
    'p13': r'C:\Users\Hinckster\Downloads\ProjectVNA\P1P3.s2p',
    'p14': r'C:\Users\Hinckster\Downloads\ProjectVNA\P1P4.s2p',
    'p23': r'C:\Users\Hinckster\Downloads\ProjectVNA\P2P3.s2p',
    'p24': r'C:\Users\Hinckster\Downloads\ProjectVNA\P2P4.s2p',
    'p34': r'C:\Users\Hinckster\Downloads\ProjectVNA\P3P4.s2p',
}

twoports = []
for name, p in paths.items():
    ntw = rf.Network(p)
    ntw.name = name      # <-- critical!
    twoports.append(ntw)

# stitch the 2-ports into one 4-port
dut4 = rf.n_twoports_2_nport(twoports, nports=4)

# convenience
fGHz = dut4.f/1e9
S = dut4.s          # shape = (freq, 4, 4)

# required traces
S11_dB   = 20*np.log10(np.abs(S[:,0,0]))
ratio    = S[:,1,0] / S[:,2,0]
ratio_dB = 20*np.log10(np.abs(ratio))
ratio_ph = np.angle(ratio, deg=True)
S41_dB   = 20*np.log10(np.abs(S[:,3,0]))

# plots
fig,ax = plt.subplots(2,2, figsize=(10,6))
ax[0,0].plot(fGHz, S11_dB);             ax[0,0].set_title('dB(S11)')
ax[0,1].plot(fGHz, S41_dB);             ax[0,1].set_title('dB(S41)')
ax[1,0].plot(fGHz, ratio_dB);           ax[1,0].set_title('dB(S21/S31)')
ax[1,1].plot(fGHz, ratio_ph);           ax[1,1].set_title('Phase(S21/S31)')
for a in ax.ravel():
    a.set_xlabel('Frequency (GHz)'); a.grid(True)
plt.tight_layout(); plt.show()
